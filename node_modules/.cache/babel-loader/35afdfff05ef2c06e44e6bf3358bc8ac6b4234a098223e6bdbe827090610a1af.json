{"ast":null,"code":"/*! @azure/msal-common v13.3.3 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar AuthErrorMessage = {\n  unexpectedError: {\n    code: \"unexpected_error\",\n    desc: \"Unexpected error in authentication.\"\n  },\n  postRequestFailed: {\n    code: \"post_request_failed\",\n    desc: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n  }\n};\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\nvar AuthError = /** @class */function (_super) {\n  __extends(AuthError, _super);\n  function AuthError(errorCode, errorMessage, suberror) {\n    var _this = this;\n    var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\n    _this = _super.call(this, errorString) || this;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.errorCode = errorCode || Constants.EMPTY_STRING;\n    _this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    _this.subError = suberror || Constants.EMPTY_STRING;\n    _this.name = \"AuthError\";\n    return _this;\n  }\n  AuthError.prototype.setCorrelationId = function (correlationId) {\n    this.correlationId = correlationId;\n  };\n  /**\r\n   * Creates an error that is thrown when something unexpected happens in the library.\r\n   * @param errDesc\r\n   */\n  AuthError.createUnexpectedError = function (errDesc) {\n    return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\n  };\n  /**\r\n   * Creates an error for post request failures.\r\n   * @param errDesc\r\n   * @returns\r\n   */\n  AuthError.createPostRequestFailed = function (errDesc) {\n    return new AuthError(AuthErrorMessage.postRequestFailed.code, AuthErrorMessage.postRequestFailed.desc + \": \" + errDesc);\n  };\n  return AuthError;\n}(Error);\nexport { AuthError, AuthErrorMessage };\n//# sourceMappingURL=AuthError.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}