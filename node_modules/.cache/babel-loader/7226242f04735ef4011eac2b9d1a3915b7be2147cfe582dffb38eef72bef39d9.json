{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\nimport { __assign } from '../_virtual/_tslib.js';\nimport { DEFAULT_SYSTEM_OPTIONS, StubbedNetworkModule, Constants, ProtocolMode, AzureCloudInstance, LogLevel } from '@azure/msal-common';\nimport { BrowserUtils } from '../utils/BrowserUtils.js';\nimport { BrowserConstants, BrowserCacheLocation } from '../utils/BrowserConstants.js';\nimport { NavigationClient } from '../navigation/NavigationClient.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Default timeout for popup windows and iframes in milliseconds\nvar DEFAULT_POPUP_TIMEOUT_MS = 60000;\nvar DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nvar DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nvar DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\nfunction buildConfiguration(_a, isBrowserEnvironment) {\n  var userInputAuth = _a.auth,\n    userInputCache = _a.cache,\n    userInputSystem = _a.system,\n    userInputTelemetry = _a.telemetry;\n  // Default auth options for browser\n  var DEFAULT_AUTH_OPTIONS = {\n    clientId: Constants.EMPTY_STRING,\n    authority: \"\" + Constants.DEFAULT_AUTHORITY,\n    knownAuthorities: [],\n    cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n    authorityMetadata: Constants.EMPTY_STRING,\n    redirectUri: Constants.EMPTY_STRING,\n    postLogoutRedirectUri: Constants.EMPTY_STRING,\n    navigateToLoginRequestUrl: true,\n    clientCapabilities: [],\n    protocolMode: ProtocolMode.AAD,\n    azureCloudOptions: {\n      azureCloudInstance: AzureCloudInstance.None,\n      tenant: Constants.EMPTY_STRING\n    },\n    skipAuthorityMetadataCache: false\n  };\n  // Default cache options for browser\n  var DEFAULT_CACHE_OPTIONS = {\n    cacheLocation: BrowserCacheLocation.SessionStorage,\n    temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n    storeAuthStateInCookie: false,\n    secureCookies: false,\n    // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n    cacheMigrationEnabled: userInputCache && userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage ? true : false,\n    claimsBasedCachingEnabled: true\n  };\n  // Default logger options for browser\n  var DEFAULT_LOGGER_OPTIONS = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    loggerCallback: function () {\n      // allow users to not set logger call back \n    },\n    logLevel: LogLevel.Info,\n    piiLoggingEnabled: false\n  };\n  // Default system options for browser\n  var DEFAULT_BROWSER_SYSTEM_OPTIONS = __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), {\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\n    networkClient: isBrowserEnvironment ? BrowserUtils.getBrowserNetworkClient() : StubbedNetworkModule,\n    navigationClient: new NavigationClient(),\n    loadFrameTimeout: 0,\n    // If loadFrameTimeout is provided, use that as default.\n    windowHashTimeout: (userInputSystem === null || userInputSystem === void 0 ? void 0 : userInputSystem.loadFrameTimeout) || DEFAULT_POPUP_TIMEOUT_MS,\n    iframeHashTimeout: (userInputSystem === null || userInputSystem === void 0 ? void 0 : userInputSystem.loadFrameTimeout) || DEFAULT_IFRAME_TIMEOUT_MS,\n    navigateFrameWait: isBrowserEnvironment && BrowserUtils.detectIEOrEdge() ? 500 : 0,\n    redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n    asyncPopups: false,\n    allowRedirectInIframe: false,\n    allowNativeBroker: false,\n    nativeBrokerHandshakeTimeout: (userInputSystem === null || userInputSystem === void 0 ? void 0 : userInputSystem.nativeBrokerHandshakeTimeout) || DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n    pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    cryptoOptions: {\n      useMsrCrypto: false,\n      entropy: undefined\n    }\n  });\n  var providedSystemOptions = __assign(__assign({}, userInputSystem), {\n    loggerOptions: (userInputSystem === null || userInputSystem === void 0 ? void 0 : userInputSystem.loggerOptions) || DEFAULT_LOGGER_OPTIONS\n  });\n  var DEFAULT_TELEMETRY_OPTIONS = {\n    application: {\n      appName: Constants.EMPTY_STRING,\n      appVersion: Constants.EMPTY_STRING\n    }\n  };\n  var overlayedConfig = {\n    auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS), userInputAuth),\n    cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userInputCache),\n    system: __assign(__assign({}, DEFAULT_BROWSER_SYSTEM_OPTIONS), providedSystemOptions),\n    telemetry: __assign(__assign({}, DEFAULT_TELEMETRY_OPTIONS), userInputTelemetry)\n  };\n  return overlayedConfig;\n}\nexport { DEFAULT_IFRAME_TIMEOUT_MS, DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS, DEFAULT_POPUP_TIMEOUT_MS, DEFAULT_REDIRECT_TIMEOUT_MS, buildConfiguration };\n//# sourceMappingURL=Configuration.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}