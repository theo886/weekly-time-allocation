{"ast":null,"code":"import { LogLevel } from \"@azure/msal-browser\";\n\n// MSAL configuration\nexport const msalConfig = {\n  auth: {\n    clientId: \"5ad4bc33-fb98-47c5-a808-a254f7a37ded\",\n    // Replace with your app registration client ID\n    authority: \"https://login.microsoftonline.com/43e5dc39-9e1f-4979-b674-674ace58ff9a\",\n    // Replace with your tenant ID\n    redirectUri: window.location.origin,\n    postLogoutRedirectUri: window.location.origin\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    storeAuthStateInCookie: false\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      }\n    }\n  }\n};\n\n// Add scopes for accessing Microsoft Graph API to get user details\nexport const loginRequest = {\n  scopes: [\"User.Read\", \"openid\", \"profile\", \"email\"]\n};\n\n// Define any protected resources, like your API\nexport const protectedResources = {\n  timeSheetApi: {\n    endpoint: window.location.hostname === 'localhost' ? 'http://localhost:7071/api' : '/api',\n    scopes: [\"api://5ad4bc33-fb98-47c5-a808-a254f7a37ded/access_as_user\"] // Using your existing app ID\n  }\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","window","location","origin","postLogoutRedirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","protectedResources","timeSheetApi","endpoint","hostname"],"sources":["/Users/theo/Documents/GitHub/weekly-time-allocation/src/auth/authConfig.ts"],"sourcesContent":["import { Configuration, LogLevel } from \"@azure/msal-browser\";\n\n// MSAL configuration\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"5ad4bc33-fb98-47c5-a808-a254f7a37ded\", // Replace with your app registration client ID\n    authority: \"https://login.microsoftonline.com/43e5dc39-9e1f-4979-b674-674ace58ff9a\", // Replace with your tenant ID\n    redirectUri: window.location.origin,\n    postLogoutRedirectUri: window.location.origin,\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    storeAuthStateInCookie: false,\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level: LogLevel, message: string, containsPii: boolean) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      },\n    },\n  },\n};\n\n// Add scopes for accessing Microsoft Graph API to get user details\nexport const loginRequest = {\n  scopes: [\"User.Read\", \"openid\", \"profile\", \"email\"]\n};\n\n// Define any protected resources, like your API\nexport const protectedResources = {\n  timeSheetApi: {\n    endpoint: window.location.hostname === 'localhost' \n      ? 'http://localhost:7071/api' \n      : '/api',\n    scopes: [\"api://5ad4bc33-fb98-47c5-a808-a254f7a37ded/access_as_user\"] // Using your existing app ID\n  }\n}; "],"mappings":"AAAA,SAAwBA,QAAQ,QAAQ,qBAAqB;;AAE7D;AACA,OAAO,MAAMC,UAAyB,GAAG;EACvCC,IAAI,EAAE;IACJC,QAAQ,EAAE,sCAAsC;IAAE;IAClDC,SAAS,EAAE,wEAAwE;IAAE;IACrFC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;IACnCC,qBAAqB,EAAEH,MAAM,CAACC,QAAQ,CAACC;EACzC,CAAC;EACDE,KAAK,EAAE;IACLC,aAAa,EAAE,gBAAgB;IAC/BC,sBAAsB,EAAE;EAC1B,CAAC;EACDC,MAAM,EAAE;IACNC,aAAa,EAAE;MACbC,cAAc,EAAEA,CAACC,KAAe,EAAEC,OAAe,EAAEC,WAAoB,KAAK;QAC1E,IAAIA,WAAW,EAAE;UACf;QACF;QACA,QAAQF,KAAK;UACX,KAAKhB,QAAQ,CAACmB,KAAK;YACjBC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACF,KAAKjB,QAAQ,CAACsB,IAAI;YAChBF,OAAO,CAACG,IAAI,CAACN,OAAO,CAAC;YACrB;UACF,KAAKjB,QAAQ,CAACwB,OAAO;YACnBJ,OAAO,CAACK,KAAK,CAACR,OAAO,CAAC;YACtB;UACF,KAAKjB,QAAQ,CAAC0B,OAAO;YACnBN,OAAO,CAACO,IAAI,CAACV,OAAO,CAAC;YACrB;QACJ;MACF;IACF;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,YAAY,GAAG;EAC1BC,MAAM,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO;AACpD,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG;EAChCC,YAAY,EAAE;IACZC,QAAQ,EAAE1B,MAAM,CAACC,QAAQ,CAAC0B,QAAQ,KAAK,WAAW,GAC9C,2BAA2B,GAC3B,MAAM;IACVJ,MAAM,EAAE,CAAC,2DAA2D,CAAC,CAAC;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}