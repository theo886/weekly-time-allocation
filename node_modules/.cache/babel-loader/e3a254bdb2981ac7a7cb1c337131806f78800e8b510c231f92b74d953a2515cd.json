{"ast":null,"code":"/*! @azure/msal-browser v2.39.0 2024-06-06 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { InteractionRequiredAuthError, AuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar NativeStatusCode;\n(function (NativeStatusCode) {\n  NativeStatusCode[\"USER_INTERACTION_REQUIRED\"] = \"USER_INTERACTION_REQUIRED\";\n  NativeStatusCode[\"USER_CANCEL\"] = \"USER_CANCEL\";\n  NativeStatusCode[\"NO_NETWORK\"] = \"NO_NETWORK\";\n  NativeStatusCode[\"TRANSIENT_ERROR\"] = \"TRANSIENT_ERROR\";\n  NativeStatusCode[\"PERSISTENT_ERROR\"] = \"PERSISTENT_ERROR\";\n  NativeStatusCode[\"DISABLED\"] = \"DISABLED\";\n  NativeStatusCode[\"ACCOUNT_UNAVAILABLE\"] = \"ACCOUNT_UNAVAILABLE\";\n})(NativeStatusCode || (NativeStatusCode = {}));\nvar NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nvar NativeAuthError = /** @class */function (_super) {\n  __extends(NativeAuthError, _super);\n  function NativeAuthError(errorCode, description, ext) {\n    var _this = _super.call(this, errorCode, description) || this;\n    Object.setPrototypeOf(_this, NativeAuthError.prototype);\n    _this.name = \"NativeAuthError\";\n    _this.ext = ext;\n    return _this;\n  }\n  /**\r\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n   */\n  NativeAuthError.prototype.isFatal = function () {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  };\n  /**\r\n   * Create the appropriate error object based on the WAM status code.\r\n   * @param code\r\n   * @param description\r\n   * @param ext\r\n   * @returns\r\n   */\n  NativeAuthError.createError = function (code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  };\n  /**\r\n   * Creates user switch error when the user chooses a different account in the native broker prompt\r\n   * @returns\r\n   */\n  NativeAuthError.createUserSwitchError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  };\n  /**\r\n   * Creates a tokens not found error when the internal cache look up fails\r\n   * @returns NativeAuthError: tokensNotFoundInCache\r\n   */\n  NativeAuthError.createTokensNotFoundInCacheError = function () {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  };\n  return NativeAuthError;\n}(AuthError);\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };\n//# sourceMappingURL=NativeAuthError.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}