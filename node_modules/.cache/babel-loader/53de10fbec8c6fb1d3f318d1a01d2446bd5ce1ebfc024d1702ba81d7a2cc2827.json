{"ast":null,"code":"var _jsxFileName = \"/Users/theo/Documents/GitHub/weekly-time-allocation/src/components/WeeklyPercentageTracker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Calendar, Plus, X, AlertCircle, Loader2 } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Select } from './ui/select';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { saveTimesheet, getTimesheets } from '../services/timesheetService';\nimport { useCurrentUser, getUserInfo } from '../auth/AuthProvider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeeklyPercentageTracker = () => {\n  _s();\n  // Sample projects data\n  const projects = [{\n    id: 1,\n    name: \"Website Redesign\",\n    code: \"WEB-001\"\n  }, {\n    id: 2,\n    name: \"Mobile App Development\",\n    code: \"APP-002\"\n  }, {\n    id: 3,\n    name: \"Internal Dashboard\",\n    code: \"DASH-003\"\n  }, {\n    id: 4,\n    name: \"Client Onboarding System\",\n    code: \"CL-004\"\n  }, {\n    id: 5,\n    name: \"Infrastructure Upgrade\",\n    code: \"INF-005\"\n  }, {\n    id: 6,\n    name: \"Data Migration\",\n    code: \"DM-006\"\n  }, {\n    id: 7,\n    name: \"Security Audit\",\n    code: \"SEC-007\"\n  }, {\n    id: 8,\n    name: \"Training & Documentation\",\n    code: \"TD-008\"\n  }];\n\n  // State for the current week\n  const [currentWeek, setCurrentWeek] = useState(() => {\n    const today = new Date();\n    const day = today.getDay(); // 0 is Sunday\n    const diff = today.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    const monday = new Date(today.setDate(diff));\n    monday.setHours(0, 0, 0, 0);\n    return monday;\n  });\n\n  // State for project time entries\n  const [entries, setEntries] = useState([{\n    id: Date.now(),\n    projectId: \"\",\n    percentage: \"100\",\n    isManuallySet: false\n  }]);\n\n  // State to track manually edited entries\n  const [manuallyEditedIds, setManuallyEditedIds] = useState(new Set());\n\n  // State to track if any dropdown is open\n  const [isAnyDropdownOpen, setIsAnyDropdownOpen] = useState(false);\n\n  // State to track if current allocation is pinned\n  const [isPinned, setIsPinned] = useState(false);\n\n  // State for error\n  const [error, setError] = useState(\"\");\n\n  // State to store previous week's entries\n  const [previousSubmissions, setPreviousSubmissions] = useState({});\n\n  // State to track if current week is submitted\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // State to track if submitted data has been modified\n  const [isModified, setIsModified] = useState(false);\n\n  // State to track API saving status\n  const [isSaving, setIsSaving] = useState(false);\n\n  // State to track API error\n  const [apiError, setApiError] = useState(\"\");\n\n  // Get the current authenticated user\n  const currentUser = useCurrentUser();\n  const userInfo = getUserInfo(currentUser);\n\n  // State to track if data is loading\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Format date range for the week\n  const formatWeekRange = startDate => {\n    const endDate = new Date(startDate);\n    endDate.setDate(endDate.getDate() + 6);\n    const formatDate = date => {\n      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    };\n    return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  };\n\n  // Define loadUserTimesheets as a useCallback function\n  const loadUserTimesheets = useCallback(async () => {\n    if (!userInfo) return;\n\n    // Add a guard to prevent multiple simultaneous loads\n    if (isLoading) return;\n    setIsLoading(true);\n    setApiError(\"\");\n    try {\n      const userTimesheets = await getTimesheets(userInfo);\n      console.log(\"Loaded user timesheets:\", userTimesheets);\n      if (userTimesheets && userTimesheets.length > 0) {\n        // Build a record of entries by week\n        const submissionsByWeek = {};\n        userTimesheets.forEach(sheet => {\n          // Convert API entries to local TimeEntry format\n          const entries = sheet.entries.map((entry, index) => ({\n            id: Date.now() + index,\n            // Generate unique IDs\n            projectId: entry.projectId,\n            percentage: entry.percentage,\n            isManuallySet: true\n          }));\n          submissionsByWeek[sheet.weekStarting] = entries;\n        });\n        setPreviousSubmissions(submissionsByWeek);\n\n        // Check if we have data for the current week\n        const currentWeekKey = formatWeekRange(currentWeek);\n        if (submissionsByWeek[currentWeekKey]) {\n          setEntries(submissionsByWeek[currentWeekKey].map(entry => ({\n            ...entry,\n            id: Date.now() + Math.random() // Generate new IDs\n          })));\n          setIsSubmitted(true);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to load user timesheets:\", error);\n      setApiError(\"Failed to load your timesheet data. Please refresh and try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userInfo, currentWeek, formatWeekRange, isLoading]);\n\n  // Navigate to previous week\n  const goToPreviousWeek = () => {\n    const prevWeek = new Date(currentWeek);\n    prevWeek.setDate(prevWeek.getDate() - 7);\n    setCurrentWeek(prevWeek);\n\n    // If pinned, keep the current entries\n    if (isPinned) {\n      // Just clone the current entries with new IDs\n      setEntries(entries.map(entry => ({\n        ...entry,\n        id: Date.now() + Math.random() // Generate new IDs\n      })));\n      setIsSubmitted(false);\n      setIsModified(false);\n    } else {\n      // Check if we have stored entries for the previous week\n      const prevWeekKey = formatWeekRange(prevWeek);\n      const previousWeekEntries = previousSubmissions[prevWeekKey];\n\n      // Check if the previous week was submitted\n      setIsSubmitted(!!previousWeekEntries);\n      setIsModified(false);\n\n      // If we have previous entries for this week, use them\n      if (previousWeekEntries && previousWeekEntries.length > 0) {\n        setEntries(previousWeekEntries.map(entry => ({\n          ...entry,\n          id: Date.now() + Math.random() // Generate new IDs\n        })));\n      } else {\n        // Otherwise start with a blank slate\n        setEntries([{\n          id: Date.now(),\n          projectId: \"\",\n          percentage: \"100\",\n          isManuallySet: false\n        }]);\n        setManuallyEditedIds(new Set());\n      }\n    }\n  };\n\n  // Navigate to next week\n  const goToNextWeek = () => {\n    const nextWeek = new Date(currentWeek);\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    setCurrentWeek(nextWeek);\n\n    // If pinned, keep the current entries\n    if (isPinned) {\n      // Just clone the current entries with new IDs\n      setEntries(entries.map(entry => ({\n        ...entry,\n        id: Date.now() + Math.random() // Generate new IDs\n      })));\n      setIsSubmitted(false);\n      setIsModified(false);\n    } else {\n      // Get the next week's entries if they exist\n      const nextWeekKey = formatWeekRange(nextWeek);\n      const previousWeekEntries = previousSubmissions[nextWeekKey];\n\n      // Check if the next week was submitted\n      setIsSubmitted(!!previousWeekEntries);\n      setIsModified(false);\n\n      // If we have previous entries for the next week, use them\n      if (previousWeekEntries && previousWeekEntries.length > 0) {\n        setEntries(previousWeekEntries.map(entry => ({\n          ...entry,\n          id: Date.now() + Math.random() // Generate new IDs\n        })));\n      } else {\n        // Otherwise start with a blank slate\n        setEntries([{\n          id: Date.now(),\n          projectId: \"\",\n          percentage: \"100\",\n          isManuallySet: false\n        }]);\n        setManuallyEditedIds(new Set());\n      }\n    }\n  };\n\n  // Add a new entry\n  const addEntry = () => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n\n    // Get all manually edited entries\n    const manualEntries = entries.filter(entry => manuallyEditedIds.has(entry.id));\n\n    // Calculate the sum of manually set percentages\n    const manualSum = manualEntries.reduce((sum, entry) => {\n      return sum + (parseInt(entry.percentage) || 0);\n    }, 0);\n\n    // Calculate how many entries we'll have after adding a new one\n    const newCount = entries.length + 1;\n\n    // Calculate how many non-manual entries we'll have (including the new one)\n    const nonManualCount = newCount - manualEntries.length;\n\n    // Calculate the remaining percentage to distribute\n    const remainingPercentage = Math.max(0, 100 - manualSum);\n\n    // Calculate equal share for non-manual entries\n    const equalShare = nonManualCount > 0 ? Math.floor(remainingPercentage / nonManualCount) : 0;\n\n    // Create the new entry\n    const newEntry = {\n      id: Date.now(),\n      projectId: \"\",\n      percentage: equalShare.toString(),\n      isManuallySet: false\n    };\n\n    // Create updated entries list\n    const updatedEntries = [...entries.map(entry => {\n      // Adjust percentages for non-manual entries\n      if (!manuallyEditedIds.has(entry.id)) {\n        return {\n          ...entry,\n          percentage: equalShare.toString()\n        };\n      }\n      return entry;\n    }), newEntry];\n    setEntries(updatedEntries);\n  };\n\n  // Remove an entry\n  const removeEntry = id => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n    if (entries.length > 1) {\n      // Check if the entry being removed was manually set\n      const isManuallySet = manuallyEditedIds.has(id);\n\n      // Remove the entry\n      const filteredEntries = entries.filter(entry => entry.id !== id);\n\n      // If we're removing a manually set entry, update the manual IDs set\n      if (isManuallySet) {\n        setManuallyEditedIds(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(id);\n          return newSet;\n        });\n      }\n\n      // Get all manually edited entries after removal\n      const manualEntries = filteredEntries.filter(entry => manuallyEditedIds.has(entry.id));\n\n      // Calculate the sum of manually set percentages\n      const manualSum = manualEntries.reduce((sum, entry) => {\n        return sum + (parseInt(entry.percentage) || 0);\n      }, 0);\n\n      // Calculate how many non-manual entries we have\n      const nonManualEntries = filteredEntries.filter(entry => !manuallyEditedIds.has(entry.id));\n\n      // If we have non-manual entries, distribute the remaining percentage\n      if (nonManualEntries.length > 0) {\n        const remainingPercentage = Math.max(0, 100 - manualSum);\n        const equalShare = remainingPercentage > 0 ? Math.floor(remainingPercentage / nonManualEntries.length) : 0;\n\n        // Distribute the remaining percentage equally\n        const result = filteredEntries.map(entry => {\n          if (!manuallyEditedIds.has(entry.id)) {\n            return {\n              ...entry,\n              percentage: equalShare.toString()\n            };\n          }\n          return entry;\n        });\n        setEntries(result);\n      } else {\n        setEntries(filteredEntries);\n      }\n    }\n  };\n\n  // Update an entry\n  const updateEntry = (id, field, value) => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n    const updatedEntries = entries.map(entry => {\n      if (entry.id === id) {\n        // If updating percentage, mark as manually set\n        if (field === 'percentage') {\n          setManuallyEditedIds(prev => {\n            const newSet = new Set(prev);\n            newSet.add(id);\n            return newSet;\n          });\n          return {\n            ...entry,\n            [field]: value,\n            isManuallySet: true\n          };\n        }\n        return {\n          ...entry,\n          [field]: value\n        };\n      }\n      return entry;\n    });\n\n    // Only redistribute if percentage was updated\n    if (field === 'percentage') {\n      redistributePercentages(updatedEntries, id);\n    } else {\n      setEntries(updatedEntries);\n    }\n  };\n\n  // Redistribute percentages when an entry is manually changed\n  const redistributePercentages = (updatedEntries, changedId) => {\n    // Get all manually set entries (including the one just changed)\n    const manualEntries = updatedEntries.filter(entry => entry.id === changedId || manuallyEditedIds.has(entry.id));\n\n    // Calculate the sum of manually set percentages\n    const manualSum = manualEntries.reduce((sum, entry) => {\n      return sum + (parseInt(entry.percentage) || 0);\n    }, 0);\n\n    // Calculate how many non-manual entries we have\n    const nonManualEntries = updatedEntries.filter(entry => entry.id !== changedId && !manuallyEditedIds.has(entry.id));\n\n    // If we have non-manual entries, distribute the remaining percentage\n    if (nonManualEntries.length > 0) {\n      const remainingPercentage = Math.max(0, 100 - manualSum);\n      const equalShare = remainingPercentage > 0 ? Math.floor(remainingPercentage / nonManualEntries.length) : 0;\n\n      // Distribute the remaining percentage equally\n      const result = updatedEntries.map(entry => {\n        if (entry.id !== changedId && !manuallyEditedIds.has(entry.id)) {\n          return {\n            ...entry,\n            percentage: equalShare.toString()\n          };\n        }\n        return entry;\n      });\n      setEntries(result);\n    } else {\n      setEntries(updatedEntries);\n    }\n  };\n\n  // Calculate total percentage\n  const calculateTotal = () => {\n    return entries.reduce((sum, entry) => {\n      const percentage = parseInt(entry.percentage) || 0;\n      return sum + percentage;\n    }, 0);\n  };\n\n  // Validate entries before submission\n  useEffect(() => {\n    const total = calculateTotal();\n    if (total > 100) {\n      setError(\"Total percentage exceeds 100%\");\n    } else if (entries.some(entry => isDuplicateProject(entry.projectId) && entry.projectId)) {\n      setError(\"Duplicate projects are not allowed\");\n    } else {\n      setError(\"\");\n    }\n  }, [entries]);\n\n  // Check for duplicate projects\n  const isDuplicateProject = projectId => {\n    return entries.filter(entry => entry.projectId === projectId).length > 1;\n  };\n\n  // Check if current week is already in previousSubmissions\n  useEffect(() => {\n    const weekKey = formatWeekRange(currentWeek);\n    const isWeekSubmitted = !!previousSubmissions[weekKey];\n    setIsSubmitted(isWeekSubmitted);\n    setIsModified(false);\n  }, [currentWeek, previousSubmissions]);\n\n  // useEffect to load user timesheets only when user is available or week changes\n  useEffect(() => {\n    // Only attempt to load if we have a user\n    if (userInfo && userInfo.userId) {\n      const weekKey = formatWeekRange(currentWeek);\n      console.log(`Loading timesheets for week: ${weekKey} and user: ${userInfo.userId}`);\n\n      // If we already have this week's data, don't reload it\n      if (previousSubmissions[weekKey]) {\n        console.log(\"Using cached timesheet data for this week\");\n        const previousWeekEntries = previousSubmissions[weekKey];\n\n        // Check if the week was submitted\n        setIsSubmitted(!!previousWeekEntries);\n        setIsModified(false);\n\n        // If we have entries for this week, use them\n        if (previousWeekEntries && previousWeekEntries.length > 0) {\n          setEntries(previousWeekEntries.map(entry => ({\n            ...entry,\n            id: Date.now() + Math.random() // Generate new IDs\n          })));\n        }\n        return;\n      }\n      loadUserTimesheets();\n    }\n  }, [userInfo === null || userInfo === void 0 ? void 0 : userInfo.userId, currentWeek, loadUserTimesheets, previousSubmissions, formatWeekRange]);\n\n  // Submit the timesheet\n  const submitTimesheet = async () => {\n    // Check if user is authenticated\n    if (!userInfo) {\n      setApiError(\"You must be signed in to submit a timesheet.\");\n      return;\n    }\n    const total = calculateTotal();\n    if (total !== 100) {\n      setError(\"Total percentage must equal 100%\");\n      return;\n    }\n    if (entries.some(entry => !entry.projectId)) {\n      setError(\"Please select a project for all entries\");\n      return;\n    }\n\n    // Check for duplicate projects\n    const projectIds = entries.map(entry => entry.projectId);\n    const uniqueProjectIds = new Set(projectIds);\n    if (uniqueProjectIds.size !== projectIds.length) {\n      setError(\"Duplicate projects are not allowed\");\n      return;\n    }\n\n    // Prepare timesheet data for API submission\n    const timesheetData = {\n      weekStarting: formatWeekRange(currentWeek),\n      userId: userInfo.userId,\n      userEmail: userInfo.email,\n      userName: userInfo.name,\n      entries: entries.map(entry => {\n        var _projects$find;\n        return {\n          projectId: entry.projectId,\n          projectName: (_projects$find = projects.find(p => p.id.toString() === entry.projectId)) === null || _projects$find === void 0 ? void 0 : _projects$find.name,\n          percentage: entry.percentage\n        };\n      }),\n      total: total\n    };\n    console.log(\"Submitting timesheet:\", timesheetData);\n\n    // Set loading state\n    setIsSaving(true);\n    setApiError(\"\");\n    try {\n      // Call the API to save the timesheet\n      const result = await saveTimesheet(timesheetData, userInfo);\n      console.log(\"API response:\", result);\n\n      // Store this week's entries for future reference (local memory cache)\n      const weekKey = formatWeekRange(currentWeek);\n      setPreviousSubmissions({\n        ...previousSubmissions,\n        [weekKey]: [...entries]\n      });\n\n      // Update submission state\n      setIsSubmitted(true);\n      setIsModified(false);\n\n      // Show message based on whether this is an update or new submission\n      if (isModified) {\n        alert(\"Timesheet updated successfully!\");\n      } else {\n        alert(\"Timesheet submitted successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to save timesheet:\", error);\n      setApiError(\"Failed to save timesheet. Please try again.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Get button text and style based on submission state\n  const getButtonProps = () => {\n    if (isSaving) {\n      return {\n        text: \"Saving...\",\n        className: \"bg-indigo-400 text-white px-8 py-2 rounded cursor-wait\"\n      };\n    } else if (isSubmitted) {\n      if (isModified) {\n        return {\n          text: \"Update\",\n          className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-2 rounded\"\n        };\n      } else {\n        return {\n          text: \"Submitted\",\n          className: \"bg-slate-400 hover:bg-slate-500 text-white px-8 py-2 rounded cursor-default\"\n        };\n      }\n    } else {\n      return {\n        text: \"Submit\",\n        className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-2 rounded\"\n      };\n    }\n  };\n\n  // Check if button should be disabled\n  const isButtonDisabled = () => {\n    return calculateTotal() !== 100 || !!error && error !== \"Please select a project for all entries\" && error !== \"Please enter percentage for all selected projects\" || isSubmitted && !isModified || isSaving;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        className: \"h-12 w-12 animate-spin text-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-4 text-lg text-slate-700\",\n        children: \"Loading your timesheet data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"flex items-center text-indigo-800\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-5 w-5 mr-2 text-indigo-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this), \"Weekly Time Allocation\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this), userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-medium\",\n              children: userInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-slate-500 text-xs\",\n              children: userInfo.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            onClick: () => {\n              console.log(\"Pin button clicked, current state:\", isPinned);\n              setIsPinned(!isPinned);\n            },\n            className: `mr-2 ${isPinned ? 'text-red-500' : 'text-slate-400'}`,\n            title: isPinned ? \"Unpin current allocations\" : \"Pin current allocations\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 384 512\",\n              fill: isPinned ? \"currentColor\" : \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: isPinned ? \"0\" : \"1\",\n              className: \"w-5 h-5\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M298.7 174.7c47.6 7 85.3 48.5 85.3 97.3 0 53-43 96-96 96h-32l-32 144H160l-32-144H96c-53  0-96-43-96-96 0-48.8 37.7-90.3 85.3-97.3C77 143.5 64 118 64 90.7 64 40.6 105.6 0 155.7  0h72.6c50.2 0 91.7 40.6 91.7 90.7 0 27.4-13 52.8-33.3 84z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold text-slate-800\",\n            children: [\"Week of \", formatWeekRange(currentWeek)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), error && error !== \"Please select a project for all entries\" && error !== \"Please enter percentage for all selected projects\" && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"mb-4 bg-red-50 text-red-800 border border-red-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this), apiError && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"mb-4 bg-red-50 text-red-800 border border-red-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n              children: apiError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [entries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-12 gap-3 items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-8\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                value: entry.projectId,\n                projects: projects,\n                onValueChange: value => updateEntry(entry.id, \"projectId\", value),\n                onOpenChange: open => setIsAnyDropdownOpen(open)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relative\",\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: \"number\",\n                  min: \"0\",\n                  max: \"100\",\n                  placeholder: \"%\",\n                  value: entry.percentage,\n                  onChange: e => updateEntry(entry.id, \"percentage\", e.target.value),\n                  className: \"pr-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"absolute right-3 top-2 text-gray-500\",\n                  children: \"%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-1 flex justify-end\",\n              children: entries.length > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"ghost\",\n                onClick: () => removeEntry(entry.id),\n                className: \"h-8 w-8 text-red-500 hover:text-red-700 hover:bg-red-50\",\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 19\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              onClick: addEntry,\n              disabled: isAnyDropdownOpen,\n              className: \"w-full border border-dashed border-indigo-300 text-indigo-600 hover:bg-indigo-50 py-2 rounded-md\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center\",\n                children: [/*#__PURE__*/_jsxDEV(Plus, {\n                  className: \"h-4 w-4 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this), \"Add Project\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 pt-4 border-t flex justify-between items-center text-lg font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            className: \"text-slate-600 flex items-center\",\n            onClick: goToPreviousWeek,\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"mr-1\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"m15 18-6-6 6-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center font-medium\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2\",\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: calculateTotal() === 100 ? \"text-green-600\" : \"text-red-600\",\n              children: [calculateTotal(), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            className: \"text-slate-600 flex items-center\",\n            onClick: goToNextWeek,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"ml-1\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"m9 18 6-6-6-6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitTimesheet,\n          className: getButtonProps().className,\n          disabled: isButtonDisabled(),\n          children: isSaving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader2, {\n              className: \"mr-2 h-4 w-4 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 19\n            }, this), getButtonProps().text]\n          }, void 0, true) : getButtonProps().text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 561,\n    columnNumber: 5\n  }, this);\n};\n_s(WeeklyPercentageTracker, \"RePZu6XZPZSlcV59hPR3r8A5yHM=\", false, function () {\n  return [useCurrentUser];\n});\n_c = WeeklyPercentageTracker;\nexport default WeeklyPercentageTracker;\nvar _c;\n$RefreshReg$(_c, \"WeeklyPercentageTracker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Calendar","Plus","X","AlertCircle","Loader2","Card","CardHeader","CardTitle","CardContent","CardFooter","Button","Input","Select","Alert","AlertDescription","saveTimesheet","getTimesheets","useCurrentUser","getUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklyPercentageTracker","_s","projects","id","name","code","currentWeek","setCurrentWeek","today","Date","day","getDay","diff","getDate","monday","setDate","setHours","entries","setEntries","now","projectId","percentage","isManuallySet","manuallyEditedIds","setManuallyEditedIds","Set","isAnyDropdownOpen","setIsAnyDropdownOpen","isPinned","setIsPinned","error","setError","previousSubmissions","setPreviousSubmissions","isSubmitted","setIsSubmitted","isModified","setIsModified","isSaving","setIsSaving","apiError","setApiError","currentUser","userInfo","isLoading","setIsLoading","formatWeekRange","startDate","endDate","formatDate","date","getMonth","getFullYear","loadUserTimesheets","userTimesheets","console","log","length","submissionsByWeek","forEach","sheet","map","entry","index","weekStarting","currentWeekKey","Math","random","goToPreviousWeek","prevWeek","prevWeekKey","previousWeekEntries","goToNextWeek","nextWeek","nextWeekKey","addEntry","manualEntries","filter","has","manualSum","reduce","sum","parseInt","newCount","nonManualCount","remainingPercentage","max","equalShare","floor","newEntry","toString","updatedEntries","removeEntry","filteredEntries","prev","newSet","delete","nonManualEntries","result","updateEntry","field","value","add","redistributePercentages","changedId","calculateTotal","total","some","isDuplicateProject","weekKey","isWeekSubmitted","userId","submitTimesheet","projectIds","uniqueProjectIds","size","timesheetData","userEmail","email","userName","_projects$find","projectName","find","p","alert","getButtonProps","text","className","isButtonDisabled","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","title","xmlns","viewBox","fill","stroke","strokeWidth","d","onValueChange","onOpenChange","open","type","min","placeholder","onChange","e","target","disabled","width","height","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["/Users/theo/Documents/GitHub/weekly-time-allocation/src/components/WeeklyPercentageTracker.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Calendar, Plus, X, AlertCircle, Loader2 } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from './ui/card';\nimport { Button } from './ui/button';\nimport { Input } from './ui/input';\nimport { Select } from './ui/select';\nimport { Alert, AlertDescription } from './ui/alert';\nimport { Project, TimeEntry, TimeSheet } from '../models/types';\nimport { saveTimesheet, getTimesheets } from '../services/timesheetService';\nimport { useCurrentUser, getUserInfo } from '../auth/AuthProvider';\n\nconst WeeklyPercentageTracker: React.FC = () => {\n  // Sample projects data\n  const projects: Project[] = [\n    { id: 1, name: \"Website Redesign\", code: \"WEB-001\" },\n    { id: 2, name: \"Mobile App Development\", code: \"APP-002\" },\n    { id: 3, name: \"Internal Dashboard\", code: \"DASH-003\" },\n    { id: 4, name: \"Client Onboarding System\", code: \"CL-004\" },\n    { id: 5, name: \"Infrastructure Upgrade\", code: \"INF-005\" },\n    { id: 6, name: \"Data Migration\", code: \"DM-006\" },\n    { id: 7, name: \"Security Audit\", code: \"SEC-007\" },\n    { id: 8, name: \"Training & Documentation\", code: \"TD-008\" }\n  ];\n\n  // State for the current week\n  const [currentWeek, setCurrentWeek] = useState<Date>(() => {\n    const today = new Date();\n    const day = today.getDay(); // 0 is Sunday\n    const diff = today.getDate() - day + (day === 0 ? -6 : 1); // Adjust when day is Sunday\n    const monday = new Date(today.setDate(diff));\n    monday.setHours(0, 0, 0, 0);\n    return monday;\n  });\n\n  // State for project time entries\n  const [entries, setEntries] = useState<TimeEntry[]>([\n    { id: Date.now(), projectId: \"\", percentage: \"100\", isManuallySet: false }\n  ]);\n\n  // State to track manually edited entries\n  const [manuallyEditedIds, setManuallyEditedIds] = useState<Set<number>>(new Set());\n\n  // State to track if any dropdown is open\n  const [isAnyDropdownOpen, setIsAnyDropdownOpen] = useState<boolean>(false);\n  \n  // State to track if current allocation is pinned\n  const [isPinned, setIsPinned] = useState<boolean>(false);\n\n  // State for error\n  const [error, setError] = useState<string>(\"\");\n\n  // State to store previous week's entries\n  const [previousSubmissions, setPreviousSubmissions] = useState<Record<string, TimeEntry[]>>({});\n  \n  // State to track if current week is submitted\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false);\n  \n  // State to track if submitted data has been modified\n  const [isModified, setIsModified] = useState<boolean>(false);\n  \n  // State to track API saving status\n  const [isSaving, setIsSaving] = useState<boolean>(false);\n  \n  // State to track API error\n  const [apiError, setApiError] = useState<string>(\"\");\n\n  // Get the current authenticated user\n  const currentUser = useCurrentUser();\n  const userInfo = getUserInfo(currentUser);\n  \n  // State to track if data is loading\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // Format date range for the week\n  const formatWeekRange = (startDate: Date): string => {\n    const endDate = new Date(startDate);\n    endDate.setDate(endDate.getDate() + 6);\n    \n    const formatDate = (date: Date): string => {\n      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    };\n    \n    return `${formatDate(startDate)} - ${formatDate(endDate)}`;\n  };\n\n  // Define loadUserTimesheets as a useCallback function\n  const loadUserTimesheets = useCallback(async () => {\n    if (!userInfo) return;\n    \n    // Add a guard to prevent multiple simultaneous loads\n    if (isLoading) return;\n    \n    setIsLoading(true);\n    setApiError(\"\");\n    \n    try {\n      const userTimesheets = await getTimesheets(userInfo);\n      console.log(\"Loaded user timesheets:\", userTimesheets);\n      \n      if (userTimesheets && userTimesheets.length > 0) {\n        // Build a record of entries by week\n        const submissionsByWeek: Record<string, TimeEntry[]> = {};\n        \n        userTimesheets.forEach(sheet => {\n          // Convert API entries to local TimeEntry format\n          const entries: TimeEntry[] = sheet.entries.map((entry, index) => ({\n            id: Date.now() + index, // Generate unique IDs\n            projectId: entry.projectId,\n            percentage: entry.percentage,\n            isManuallySet: true\n          }));\n          \n          submissionsByWeek[sheet.weekStarting] = entries;\n        });\n        \n        setPreviousSubmissions(submissionsByWeek);\n        \n        // Check if we have data for the current week\n        const currentWeekKey = formatWeekRange(currentWeek);\n        if (submissionsByWeek[currentWeekKey]) {\n          setEntries(submissionsByWeek[currentWeekKey].map(entry => ({\n            ...entry,\n            id: Date.now() + Math.random() // Generate new IDs\n          })));\n          setIsSubmitted(true);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to load user timesheets:\", error);\n      setApiError(\"Failed to load your timesheet data. Please refresh and try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userInfo, currentWeek, formatWeekRange, isLoading]);\n\n  // Navigate to previous week\n  const goToPreviousWeek = (): void => {\n    const prevWeek = new Date(currentWeek);\n    prevWeek.setDate(prevWeek.getDate() - 7);\n    setCurrentWeek(prevWeek);\n    \n    // If pinned, keep the current entries\n    if (isPinned) {\n      // Just clone the current entries with new IDs\n      setEntries(entries.map(entry => ({\n        ...entry,\n        id: Date.now() + Math.random() // Generate new IDs\n      })));\n      setIsSubmitted(false);\n      setIsModified(false);\n    } else {\n      // Check if we have stored entries for the previous week\n      const prevWeekKey = formatWeekRange(prevWeek);\n      const previousWeekEntries = previousSubmissions[prevWeekKey];\n      \n      // Check if the previous week was submitted\n      setIsSubmitted(!!previousWeekEntries);\n      setIsModified(false);\n      \n      // If we have previous entries for this week, use them\n      if (previousWeekEntries && previousWeekEntries.length > 0) {\n        setEntries(previousWeekEntries.map(entry => ({\n          ...entry,\n          id: Date.now() + Math.random() // Generate new IDs\n        })));\n      } else {\n        // Otherwise start with a blank slate\n        setEntries([{ id: Date.now(), projectId: \"\", percentage: \"100\", isManuallySet: false }]);\n        setManuallyEditedIds(new Set());\n      }\n    }\n  };\n\n  // Navigate to next week\n  const goToNextWeek = (): void => {\n    const nextWeek = new Date(currentWeek);\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    setCurrentWeek(nextWeek);\n    \n    // If pinned, keep the current entries\n    if (isPinned) {\n      // Just clone the current entries with new IDs\n      setEntries(entries.map(entry => ({\n        ...entry,\n        id: Date.now() + Math.random() // Generate new IDs\n      })));\n      setIsSubmitted(false);\n      setIsModified(false);\n    } else {\n      // Get the next week's entries if they exist\n      const nextWeekKey = formatWeekRange(nextWeek);\n      const previousWeekEntries = previousSubmissions[nextWeekKey];\n      \n      // Check if the next week was submitted\n      setIsSubmitted(!!previousWeekEntries);\n      setIsModified(false);\n      \n      // If we have previous entries for the next week, use them\n      if (previousWeekEntries && previousWeekEntries.length > 0) {\n        setEntries(previousWeekEntries.map(entry => ({\n          ...entry,\n          id: Date.now() + Math.random() // Generate new IDs\n        })));\n      } else {\n        // Otherwise start with a blank slate\n        setEntries([{ id: Date.now(), projectId: \"\", percentage: \"100\", isManuallySet: false }]);\n        setManuallyEditedIds(new Set());\n      }\n    }\n  };\n\n  // Add a new entry\n  const addEntry = (): void => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n    \n    // Get all manually edited entries\n    const manualEntries = entries.filter(entry => manuallyEditedIds.has(entry.id));\n    \n    // Calculate the sum of manually set percentages\n    const manualSum = manualEntries.reduce((sum, entry) => {\n      return sum + (parseInt(entry.percentage) || 0);\n    }, 0);\n    \n    // Calculate how many entries we'll have after adding a new one\n    const newCount = entries.length + 1;\n    \n    // Calculate how many non-manual entries we'll have (including the new one)\n    const nonManualCount = newCount - manualEntries.length;\n    \n    // Calculate the remaining percentage to distribute\n    const remainingPercentage = Math.max(0, 100 - manualSum);\n    \n    // Calculate equal share for non-manual entries\n    const equalShare = nonManualCount > 0 ? \n      Math.floor(remainingPercentage / nonManualCount) : 0;\n      \n    // Create the new entry\n    const newEntry: TimeEntry = { id: Date.now(), projectId: \"\", percentage: equalShare.toString(), isManuallySet: false };\n    \n    // Create updated entries list\n    const updatedEntries = [\n      ...entries.map(entry => {\n        // Adjust percentages for non-manual entries\n        if (!manuallyEditedIds.has(entry.id)) {\n          return { ...entry, percentage: equalShare.toString() };\n        }\n        return entry;\n      }),\n      newEntry\n    ];\n    \n    setEntries(updatedEntries);\n  };\n\n  // Remove an entry\n  const removeEntry = (id: number): void => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n    \n    if (entries.length > 1) {\n      // Check if the entry being removed was manually set\n      const isManuallySet = manuallyEditedIds.has(id);\n      \n      // Remove the entry\n      const filteredEntries = entries.filter(entry => entry.id !== id);\n      \n      // If we're removing a manually set entry, update the manual IDs set\n      if (isManuallySet) {\n        setManuallyEditedIds(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(id);\n          return newSet;\n        });\n      }\n      \n      // Get all manually edited entries after removal\n      const manualEntries = filteredEntries.filter(entry => manuallyEditedIds.has(entry.id));\n      \n      // Calculate the sum of manually set percentages\n      const manualSum = manualEntries.reduce((sum, entry) => {\n        return sum + (parseInt(entry.percentage) || 0);\n      }, 0);\n      \n      // Calculate how many non-manual entries we have\n      const nonManualEntries = filteredEntries.filter(entry => !manuallyEditedIds.has(entry.id));\n      \n      // If we have non-manual entries, distribute the remaining percentage\n      if (nonManualEntries.length > 0) {\n        const remainingPercentage = Math.max(0, 100 - manualSum);\n        const equalShare = remainingPercentage > 0 ? \n          Math.floor(remainingPercentage / nonManualEntries.length) : 0;\n        \n        // Distribute the remaining percentage equally\n        const result = filteredEntries.map(entry => {\n          if (!manuallyEditedIds.has(entry.id)) {\n            return { ...entry, percentage: equalShare.toString() };\n          }\n          return entry;\n        });\n        \n        setEntries(result);\n      } else {\n        setEntries(filteredEntries);\n      }\n    }\n  };\n\n  // Update an entry\n  const updateEntry = (id: number, field: keyof TimeEntry, value: string): void => {\n    // If already submitted, mark as modified\n    if (isSubmitted) {\n      setIsModified(true);\n    }\n    \n    const updatedEntries = entries.map(entry => {\n      if (entry.id === id) {\n        // If updating percentage, mark as manually set\n        if (field === 'percentage') {\n          setManuallyEditedIds(prev => {\n            const newSet = new Set(prev);\n            newSet.add(id);\n            return newSet;\n          });\n          return { ...entry, [field]: value, isManuallySet: true };\n        }\n        return { ...entry, [field]: value };\n      }\n      return entry;\n    });\n    \n    // Only redistribute if percentage was updated\n    if (field === 'percentage') {\n      redistributePercentages(updatedEntries, id);\n    } else {\n      setEntries(updatedEntries);\n    }\n  };\n\n  // Redistribute percentages when an entry is manually changed\n  const redistributePercentages = (updatedEntries: TimeEntry[], changedId: number): void => {\n    // Get all manually set entries (including the one just changed)\n    const manualEntries = updatedEntries.filter(entry => \n      entry.id === changedId || manuallyEditedIds.has(entry.id)\n    );\n    \n    // Calculate the sum of manually set percentages\n    const manualSum = manualEntries.reduce((sum, entry) => {\n      return sum + (parseInt(entry.percentage) || 0);\n    }, 0);\n    \n    // Calculate how many non-manual entries we have\n    const nonManualEntries = updatedEntries.filter(entry => \n      entry.id !== changedId && !manuallyEditedIds.has(entry.id)\n    );\n    \n    // If we have non-manual entries, distribute the remaining percentage\n    if (nonManualEntries.length > 0) {\n      const remainingPercentage = Math.max(0, 100 - manualSum);\n      const equalShare = remainingPercentage > 0 ? \n        Math.floor(remainingPercentage / nonManualEntries.length) : 0;\n      \n      // Distribute the remaining percentage equally\n      const result = updatedEntries.map(entry => {\n        if (entry.id !== changedId && !manuallyEditedIds.has(entry.id)) {\n          return { ...entry, percentage: equalShare.toString() };\n        }\n        return entry;\n      });\n      \n      setEntries(result);\n    } else {\n      setEntries(updatedEntries);\n    }\n  };\n\n  // Calculate total percentage\n  const calculateTotal = (): number => {\n    return entries.reduce((sum, entry) => {\n      const percentage = parseInt(entry.percentage) || 0;\n      return sum + percentage;\n    }, 0);\n  };\n\n  // Validate entries before submission\n  useEffect(() => {\n    const total = calculateTotal();\n    \n    if (total > 100) {\n      setError(\"Total percentage exceeds 100%\");\n    } else if (entries.some(entry => isDuplicateProject(entry.projectId) && entry.projectId)) {\n      setError(\"Duplicate projects are not allowed\");\n    } else {\n      setError(\"\");\n    }\n  }, [entries]);\n\n  // Check for duplicate projects\n  const isDuplicateProject = (projectId: string): boolean => {\n    return entries.filter(entry => entry.projectId === projectId).length > 1;\n  };\n\n  // Check if current week is already in previousSubmissions\n  useEffect(() => {\n    const weekKey = formatWeekRange(currentWeek);\n    const isWeekSubmitted = !!previousSubmissions[weekKey];\n    setIsSubmitted(isWeekSubmitted);\n    setIsModified(false);\n  }, [currentWeek, previousSubmissions]);\n  \n  // useEffect to load user timesheets only when user is available or week changes\n  useEffect(() => {\n    // Only attempt to load if we have a user\n    if (userInfo && userInfo.userId) {\n      const weekKey = formatWeekRange(currentWeek);\n      console.log(`Loading timesheets for week: ${weekKey} and user: ${userInfo.userId}`);\n      \n      // If we already have this week's data, don't reload it\n      if (previousSubmissions[weekKey]) {\n        console.log(\"Using cached timesheet data for this week\");\n        \n        const previousWeekEntries = previousSubmissions[weekKey];\n        \n        // Check if the week was submitted\n        setIsSubmitted(!!previousWeekEntries);\n        setIsModified(false);\n        \n        // If we have entries for this week, use them\n        if (previousWeekEntries && previousWeekEntries.length > 0) {\n          setEntries(previousWeekEntries.map(entry => ({\n            ...entry,\n            id: Date.now() + Math.random() // Generate new IDs\n          })));\n        }\n        return;\n      }\n      \n      loadUserTimesheets();\n    }\n  }, [userInfo?.userId, currentWeek, loadUserTimesheets, previousSubmissions, formatWeekRange]);\n\n  // Submit the timesheet\n  const submitTimesheet = async (): Promise<void> => {\n    // Check if user is authenticated\n    if (!userInfo) {\n      setApiError(\"You must be signed in to submit a timesheet.\");\n      return;\n    }\n    \n    const total = calculateTotal();\n    \n    if (total !== 100) {\n      setError(\"Total percentage must equal 100%\");\n      return;\n    }\n    \n    if (entries.some(entry => !entry.projectId)) {\n      setError(\"Please select a project for all entries\");\n      return;\n    }\n    \n    // Check for duplicate projects\n    const projectIds = entries.map(entry => entry.projectId);\n    const uniqueProjectIds = new Set(projectIds);\n    \n    if (uniqueProjectIds.size !== projectIds.length) {\n      setError(\"Duplicate projects are not allowed\");\n      return;\n    }\n    \n    // Prepare timesheet data for API submission\n    const timesheetData: TimeSheet = {\n      weekStarting: formatWeekRange(currentWeek),\n      userId: userInfo.userId,\n      userEmail: userInfo.email,\n      userName: userInfo.name,\n      entries: entries.map(entry => ({\n        projectId: entry.projectId,\n        projectName: projects.find(p => p.id.toString() === entry.projectId)?.name,\n        percentage: entry.percentage\n      })),\n      total: total\n    };\n    \n    console.log(\"Submitting timesheet:\", timesheetData);\n    \n    // Set loading state\n    setIsSaving(true);\n    setApiError(\"\");\n    \n    try {\n      // Call the API to save the timesheet\n      const result = await saveTimesheet(timesheetData, userInfo);\n      console.log(\"API response:\", result);\n      \n      // Store this week's entries for future reference (local memory cache)\n      const weekKey = formatWeekRange(currentWeek);\n      setPreviousSubmissions({\n        ...previousSubmissions,\n        [weekKey]: [...entries]\n      });\n      \n      // Update submission state\n      setIsSubmitted(true);\n      setIsModified(false);\n      \n      // Show message based on whether this is an update or new submission\n      if (isModified) {\n        alert(\"Timesheet updated successfully!\");\n      } else {\n        alert(\"Timesheet submitted successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Failed to save timesheet:\", error);\n      setApiError(\"Failed to save timesheet. Please try again.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Get button text and style based on submission state\n  const getButtonProps = () => {\n    if (isSaving) {\n      return {\n        text: \"Saving...\",\n        className: \"bg-indigo-400 text-white px-8 py-2 rounded cursor-wait\"\n      };\n    } else if (isSubmitted) {\n      if (isModified) {\n        return {\n          text: \"Update\",\n          className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-2 rounded\"\n        };\n      } else {\n        return {\n          text: \"Submitted\",\n          className: \"bg-slate-400 hover:bg-slate-500 text-white px-8 py-2 rounded cursor-default\"\n        };\n      }\n    } else {\n      return {\n        text: \"Submit\",\n        className: \"bg-indigo-600 hover:bg-indigo-700 text-white px-8 py-2 rounded\"\n      };\n    }\n  };\n\n  // Check if button should be disabled\n  const isButtonDisabled = (): boolean => {\n    return calculateTotal() !== 100 || \n           (!!error && error !== \"Please select a project for all entries\" && error !== \"Please enter percentage for all selected projects\") ||\n           (isSubmitted && !isModified) ||\n           isSaving;\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      {isLoading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <Loader2 className=\"h-12 w-12 animate-spin text-indigo-600\" />\n          <span className=\"ml-4 text-lg text-slate-700\">Loading your timesheet data...</span>\n        </div>\n      ) : (\n        <Card>\n          <CardHeader>\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <CardTitle className=\"flex items-center text-indigo-800\">\n                  <Calendar className=\"h-5 w-5 mr-2 text-indigo-600\" />\n                  Weekly Time Allocation\n                </CardTitle>\n              </div>\n              {userInfo && (\n                <div className=\"text-sm text-right\">\n                  <div className=\"font-medium\">{userInfo.name}</div>\n                  <div className=\"text-slate-500 text-xs\">{userInfo.email}</div>\n                </div>\n              )}\n            </div>\n          </CardHeader>\n          \n          <CardContent>\n            <div className=\"flex items-center justify-center mb-3\">\n              <Button \n                variant=\"ghost\" \n                onClick={() => {\n                  console.log(\"Pin button clicked, current state:\", isPinned);\n                  setIsPinned(!isPinned);\n                }} \n                className={`mr-2 ${isPinned ? 'text-red-500' : 'text-slate-400'}`}\n                title={isPinned ? \"Unpin current allocations\" : \"Pin current allocations\"}\n              >\n                {/* This is the \"Thumbtack\" icon from Font Awesome Free. */}\n                {/* We're applying both color and fill changes for better visual feedback */}\n                <svg \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  viewBox=\"0 0 384 512\" \n                  fill={isPinned ? \"currentColor\" : \"none\"}\n                  stroke=\"currentColor\"\n                  strokeWidth={isPinned ? \"0\" : \"1\"}\n                  className=\"w-5 h-5\"\n                >\n                  <path d=\"M298.7 174.7c47.6 7 85.3 48.5 85.3 97.3 0 53-43 96-96 96h-32l-32 144H160l-32-144H96c-53 \n                    0-96-43-96-96 0-48.8 37.7-90.3 85.3-97.3C77 143.5 64 118 64 90.7 64 40.6 105.6 0 155.7 \n                    0h72.6c50.2 0 91.7 40.6 91.7 90.7 0 27.4-13 52.8-33.3 84z\" />\n                </svg>\n              </Button>\n              <span className=\"text-lg font-semibold text-slate-800\">\n                Week of {formatWeekRange(currentWeek)}\n              </span>\n            </div>\n            \n            {error && error !== \"Please select a project for all entries\" && error !== \"Please enter percentage for all selected projects\" && (\n              <Alert className=\"mb-4 bg-red-50 text-red-800 border border-red-200\">\n                <div className=\"flex items-center\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{error}</AlertDescription>\n                </div>\n              </Alert>\n            )}\n            \n            {apiError && (\n              <Alert className=\"mb-4 bg-red-50 text-red-800 border border-red-200\">\n                <div className=\"flex items-center\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{apiError}</AlertDescription>\n                </div>\n              </Alert>\n            )}\n            \n            <div className=\"space-y-3\">\n              {entries.map((entry) => (\n                <div key={entry.id} className=\"grid grid-cols-12 gap-3 items-center\">\n                  <div className=\"col-span-8\">\n                    <Select \n                      value={entry.projectId} \n                      projects={projects}\n                      onValueChange={(value) => updateEntry(entry.id, \"projectId\", value)}\n                      onOpenChange={(open) => setIsAnyDropdownOpen(open)}\n                    />\n                  </div>\n                  \n                  <div className=\"col-span-3\">\n                    <div className=\"relative\">\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"100\"\n                        placeholder=\"%\"\n                        value={entry.percentage}\n                        onChange={(e) => updateEntry(entry.id, \"percentage\", e.target.value)}\n                        className=\"pr-6\"\n                      />\n                      <span className=\"absolute right-3 top-2 text-gray-500\">%</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"col-span-1 flex justify-end\">\n                    {entries.length > 1 && (\n                      <Button \n                        variant=\"ghost\" \n                        onClick={() => removeEntry(entry.id)}\n                        className=\"h-8 w-8 text-red-500 hover:text-red-700 hover:bg-red-50\"\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              {/* Add button below the last entry */}\n              <div className=\"pt-2\">\n                <Button \n                  variant=\"outline\" \n                  onClick={addEntry}\n                  disabled={isAnyDropdownOpen}\n                  className=\"w-full border border-dashed border-indigo-300 text-indigo-600 hover:bg-indigo-50 py-2 rounded-md\"\n                >\n                  <div className=\"flex items-center justify-center\">\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Add Project\n                  </div>\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 pt-4 border-t flex justify-between items-center text-lg font-medium\">\n              <Button \n                variant=\"ghost\" \n                className=\"text-slate-600 flex items-center\" \n                onClick={goToPreviousWeek}\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1\">\n                  <path d=\"m15 18-6-6 6-6\"/>\n                </svg>\n                <span>Prev</span>\n              </Button>\n              \n              <div className=\"flex items-center font-medium\">\n                <span className=\"mr-2\">Total:</span>\n                <span className={calculateTotal() === 100 ? \"text-green-600\" : \"text-red-600\"}>\n                  {calculateTotal()}%\n                </span>\n              </div>\n              \n              <Button \n                variant=\"ghost\" \n                className=\"text-slate-600 flex items-center\" \n                onClick={goToNextWeek}\n              >\n                <span>Next</span>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"ml-1\">\n                  <path d=\"m9 18 6-6-6-6\"/>\n                </svg>\n              </Button>\n            </div>\n          </CardContent>\n          \n          <CardFooter>\n            {/* Dynamic button text and styling */}\n            <Button \n              onClick={submitTimesheet} \n              className={getButtonProps().className}\n              disabled={isButtonDisabled()}\n            >\n              {isSaving ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {getButtonProps().text}\n                </>\n              ) : (\n                getButtonProps().text\n              )}\n            </Button>\n          </CardFooter>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default WeeklyPercentageTracker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}